version: '3.8'
services:
  kafka:
    image: confluentinc/confluent-local:7.4.3
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092" # for client connections
      - "9101:9101" # JMX
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      CLUSTER_ID: 'K0EA9p0yEe6MkAAAAkKsEg'
      KAFKA_NUM_PARTITIONS: 3 # Default partitions for new topics
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1

  kafka-init-topics:
    image: confluentinc/confluent-local:7.4.3
    container_name: kafka-init-topics
    depends_on:
      - kafka
    command: "bash -c 'kafka-topics --create --topic stats.user-actions.v1 --partitions 3 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092 && kafka-topics --create --topic stats.events-similarity.v1 --partitions 3 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092'"
    init: true

  stats-db:
    image: postgres:16.1
    container_name: stats-db
    ports:
      - "6542:5432"
    environment:
      POSTGRES_USER: stat
      POSTGRES_PASSWORD: stat
      POSTGRES_DB: ewm-stats
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      interval: 5s
      retries: 10
      timeout: 5s
    volumes:
      - stats_db_data:/var/lib/postgresql/data # Добавляем том для stats-db
    networks:
      - app-network

  ewm-db:
    container_name: ewm-db
    image: postgres:16.1
    ports:
      - "6543:5432"
    environment:
      POSTGRES_DB: ewm-database
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      interval: 5s
      retries: 10
      timeout: 5s
    volumes:
      - ewm_db_data:/var/lib/postgresql/data # Добавляем том для ewm-db
    networks:
      - app-network

  analyzer-db:
    image: postgres:16.1
    container_name: analyzer-db
    ports:
      - "5435:5432"
    environment:
      - POSTGRES_DB=analyzer-db
      - POSTGRES_USER=analyzer
      - POSTGRES_PASSWORD=analyzer
    healthcheck: #секция  обеспечения того, что другие контейнеры (например, ваше приложение) не будут пытаться подключиться к базе данных, пока она не будет готова.
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

networks:
  app-network:
    driver: bridge

volumes:
  ewm_db_data: # Определяем том для ewm-db
  stats_db_data: # Определяем том для stats-db
  analyzer_db_data: